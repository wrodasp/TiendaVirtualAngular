{"version":3,"sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"names":["ShareButton","Object","defineProperty","prototype","button","this","shareCount","url","theme","onCount","count","emit","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ShareService","Input","Output","HostBinding","ViewChild","ShareDirective","_share","showIcon","showText","showCount","size","config","EventEmitter","opened","closed","ShareButtonModule","withConfig","ngModule","providers","provide","SHARE_BUTTONS_CONFIG","useValue","NgModule","declarations","imports","ShareModule","FontAwesomeModule","CommonModule","exports"],"mappings":"4gBAAA,IAAAA,GAoBEC,OAAAC,eAAqBF,EAAAG,UAAA,eAAY,KAAjC,SAAkCC,GAChCC,KAAKC,WAAa,EAClBD,KAAKD,OAASA,mCAIhBH,OAAAC,eAAkBF,EAAAG,UAAA,SAAM,KAAxB,SAAyBI,GACvBF,KAAKC,WAAa,EAClBD,KAAKE,IAAMA,mCAiDbN,OAAAC,eAA0BF,EAAAG,UAAA,cAAW,KAArC,WACE,MAAO,gBAAgBE,KAAKG,uCAQ9BR,EAAAG,UAAAM,QAAA,SAAQC,GACNL,KAAKC,WAAaI,EAClBL,KAAKK,MAAMC,KAAKD,wBArFnBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAA,ooCAEAC,gBAAiBC,EAAAA,wBAAwBC,8rCANlCC,EAAAA,sDAmBNC,EAAAA,MAAKP,KAAA,CAAC,0BAMNO,EAAAA,MAAKP,KAAA,CAAC,sBAMNO,EAAAA,2BAGAA,EAAAA,qBAGAA,EAAAA,oBAGAA,EAAAA,2BAGAA,EAAAA,wBAGAA,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,qBAGAA,EAAAA,qBAGAC,EAAAA,uBAGAA,EAAAA,uBAGAA,EAAAA,4BAGAC,EAAAA,YAAWT,KAAA,CAAC,sBAIZU,EAAAA,UAASV,KAAA,CAACW,EAAAA,mBAUbxB,GARE,SAAAA,EAAoByB,GAAApB,KAAAoB,OAAAA,EApCXpB,KAAAqB,UAAW,EAGXrB,KAAAsB,UAAW,EAGXtB,KAAAuB,WAAY,EASZvB,KAAAwB,KAAexB,KAAKoB,OAAOK,OAAOD,KAGlCxB,KAAAG,MAAgBH,KAAKoB,OAAOK,OAAOtB,MAGlCH,KAAAK,MAAQ,IAAIqB,EAAAA,aAGZ1B,KAAA2B,OAAS,IAAID,EAAAA,aAGb1B,KAAA4B,OAAS,IAAIF,EAAAA,aC1EzB,IAAAG,GAuBSA,EAAAC,WAAP,SAAkBL,GAChB,MAAO,CACLM,SAAUF,EACVG,UAAW,CAAC,CAACC,QAASC,EAAAA,qBAAsBC,SAAUV,0BAnB3DW,EAAAA,SAAQ5B,KAAA,CAAC,CACR6B,aAAc,CACZ1C,GAEF2C,QAAS,CACPC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,cAEFC,QAAS,CACPH,EAAAA,YACAC,EAAAA,kBACA7C,OAUJkC,GAtBA,SAAAA","sourcesContent":["import { Component, Input, Output, ViewChild, HostBinding, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ShareService, ShareDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  templateUrl: './share-button.html',\r\n  styleUrls: ['./share-button.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButton {\r\n\r\n  /** The sharing link */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button') set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** Set the sharing link */\r\n  @Input('url') set setUrl(url: string) {\r\n    this.shareCount = 0;\r\n    this.url = url;\r\n  }\r\n\r\n  /** The title parameter */\r\n  @Input() title: string;\r\n\r\n  /** The description parameter */\r\n  @Input() description: string;\r\n\r\n  /** The image parameter for sharing on Pinterest */\r\n  @Input() image: string;\r\n\r\n  /** The tags parameter for sharing on Twitter and Tumblr */\r\n  @Input() tags: string;\r\n\r\n  /** Sets meta tags from document head, useful when SEO is available */\r\n  @Input() autoSetMeta: boolean;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Show sharing count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button custom icon */\r\n  @Input() icon: string;\r\n\r\n  /** Button size */\r\n  @Input() size: number = this._share.config.size;\r\n\r\n  /** Button theme */\r\n  @Input() theme: string = this._share.config.theme;\r\n\r\n  /** Stream that emits when share count is fetched */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when share dialog is opened */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Stream that emits when share dialog is closed */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') get buttonClass() {\r\n    return `sb-button sb-${this.theme}`;\r\n  }\r\n\r\n  @ViewChild(ShareDirective) ref: ShareDirective;\r\n\r\n  constructor(private _share: ShareService) {\r\n  }\r\n\r\n  onCount(count: number) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { ShareButton } from './share-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButton\r\n  ],\r\n  imports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    FontAwesomeModule,\r\n    ShareButton\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\r\n    };\r\n  }\r\n}\r\n"]}